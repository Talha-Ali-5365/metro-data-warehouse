USE metro_dw;

-- Drop tables if they exist (in reverse order of dependencies)
DROP TABLE IF EXISTS FACT_SALES;
DROP TABLE IF EXISTS DIM_DATE;
DROP TABLE IF EXISTS DIM_SUPPLIER;
DROP TABLE IF EXISTS DIM_PRODUCT;
DROP TABLE IF EXISTS DIM_CUSTOMER;
DROP TABLE IF EXISTS DIM_STORE;

-- Create Dimension Tables
CREATE TABLE DIM_DATE (
    DATE_KEY INT PRIMARY KEY,
    FULL_DATE DATE,
    YEAR INT,
    QUARTER INT,
    MONTH INT,
    MONTH_NAME VARCHAR(10),
    WEEK_OF_YEAR INT,
    DAY_OF_WEEK INT,
    DAY_NAME VARCHAR(10),
    IS_WEEKEND BOOLEAN,
    IS_HOLIDAY BOOLEAN
);

CREATE TABLE DIM_SUPPLIER (
    SUPPLIER_KEY INT PRIMARY KEY AUTO_INCREMENT,
    SUPPLIER_ID INT,
    SUPPLIER_NAME VARCHAR(100)
);

CREATE TABLE DIM_PRODUCT (
    PRODUCT_KEY INT PRIMARY KEY AUTO_INCREMENT,
    PRODUCT_ID INT,
    PRODUCT_NAME VARCHAR(100),
    PRODUCT_PRICE DECIMAL(10,2),
    SUPPLIER_KEY INT,
    FOREIGN KEY (SUPPLIER_KEY) REFERENCES DIM_SUPPLIER(SUPPLIER_KEY)
);

CREATE TABLE DIM_CUSTOMER (
    CUSTOMER_KEY INT PRIMARY KEY AUTO_INCREMENT,
    CUSTOMER_ID INT,
    CUSTOMER_NAME VARCHAR(100),
    GENDER VARCHAR(10)
);

CREATE TABLE DIM_STORE (
    STORE_KEY INT PRIMARY KEY AUTO_INCREMENT,
    STORE_ID INT,
    STORE_NAME VARCHAR(100)
);

-- Create Fact Table
CREATE TABLE FACT_SALES (
    SALES_KEY BIGINT PRIMARY KEY AUTO_INCREMENT,
    DATE_KEY INT,
    PRODUCT_KEY INT,
    CUSTOMER_KEY INT,
    STORE_KEY INT,
    SUPPLIER_KEY INT,
    QUANTITY INT,
    PRODUCT_PRICE DECIMAL(10,2),
    SALES_AMOUNT DECIMAL(10,2),
    FOREIGN KEY (DATE_KEY) REFERENCES DIM_DATE(DATE_KEY),
    FOREIGN KEY (PRODUCT_KEY) REFERENCES DIM_PRODUCT(PRODUCT_KEY),
    FOREIGN KEY (CUSTOMER_KEY) REFERENCES DIM_CUSTOMER(CUSTOMER_KEY),
    FOREIGN KEY (STORE_KEY) REFERENCES DIM_STORE(STORE_KEY),
    FOREIGN KEY (SUPPLIER_KEY) REFERENCES DIM_SUPPLIER(SUPPLIER_KEY)
);

-- Insert data into DIM_DATE (for the year 2019)
DELIMITER //
CREATE PROCEDURE PopulateDateDimension()
BEGIN
    DECLARE start_date DATE;
    DECLARE end_date DATE;
    SET start_date = '2019-01-01';
    SET end_date = '2019-12-31';
    
    WHILE start_date <= end_date DO
        INSERT INTO DIM_DATE (
            DATE_KEY,
            FULL_DATE,
            YEAR,
            QUARTER,
            MONTH,
            MONTH_NAME,
            WEEK_OF_YEAR,
            DAY_OF_WEEK,
            DAY_NAME,
            IS_WEEKEND,
            IS_HOLIDAY
        )
        VALUES (
            YEAR(start_date) * 10000 + MONTH(start_date) * 100 + DAY(start_date),
            start_date,
            YEAR(start_date),
            QUARTER(start_date),
            MONTH(start_date),
            MONTHNAME(start_date),
            WEEK(start_date),
            DAYOFWEEK(start_date),
            DAYNAME(start_date),
            DAYOFWEEK(start_date) IN (1, 7),
            FALSE
        );
        SET start_date = DATE_ADD(start_date, INTERVAL 1 DAY);
    END WHILE;
END //
DELIMITER ;

-- Execute the procedure
CALL PopulateDateDimension();
DROP PROCEDURE PopulateDateDimension;

-- Populate dimension tables from WAREHOUSE_SALES
INSERT INTO DIM_SUPPLIER (SUPPLIER_ID, SUPPLIER_NAME)
SELECT DISTINCT SUPPLIER_ID, SUPPLIER_NAME
FROM WAREHOUSE_SALES;

INSERT INTO DIM_PRODUCT (PRODUCT_ID, PRODUCT_NAME, PRODUCT_PRICE, SUPPLIER_KEY)
SELECT DISTINCT 
    ws.PRODUCT_ID,
    ws.PRODUCT_NAME,
    ws.PRODUCT_PRICE,
    s.SUPPLIER_KEY
FROM WAREHOUSE_SALES ws
JOIN DIM_SUPPLIER s ON ws.SUPPLIER_ID = s.SUPPLIER_ID;

INSERT INTO DIM_CUSTOMER (CUSTOMER_ID, CUSTOMER_NAME, GENDER)
SELECT DISTINCT 
    CUSTOMER_ID,
    CUSTOMER_NAME,
    GENDER
FROM WAREHOUSE_SALES;

INSERT INTO DIM_STORE (STORE_ID, STORE_NAME)
SELECT DISTINCT STORE_ID, STORE_NAME
FROM WAREHOUSE_SALES;

-- Populate FACT_SALES
INSERT INTO FACT_SALES (
    DATE_KEY,
    PRODUCT_KEY,
    CUSTOMER_KEY,
    STORE_KEY,
    SUPPLIER_KEY,
    QUANTITY,
    PRODUCT_PRICE,
    SALES_AMOUNT
)
SELECT 
    YEAR(ws.ORDER_DATE) * 10000 + MONTH(ws.ORDER_DATE) * 100 + DAY(ws.ORDER_DATE),
    dp.PRODUCT_KEY,
    dc.CUSTOMER_KEY,
    ds.STORE_KEY,
    dp.SUPPLIER_KEY,
    ws.QUANTITY,
    ws.PRODUCT_PRICE,
    ws.SALE
FROM WAREHOUSE_SALES ws
JOIN DIM_PRODUCT dp ON ws.PRODUCT_ID = dp.PRODUCT_ID
JOIN DIM_CUSTOMER dc ON ws.CUSTOMER_ID = dc.CUSTOMER_ID
JOIN DIM_STORE ds ON ws.STORE_ID = ds.STORE_ID
WHERE YEAR(ws.ORDER_DATE) = 2019;
